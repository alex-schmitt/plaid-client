/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.343.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// TransactionCounterparty : The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description.

#[derive(
    Clone, Debug, PartialEq, Default, Serialize, Deserialize, bincode::Encode, bincode::Decode,
)]
pub struct TransactionCounterparty {
    /// The name of the counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "type")]
    pub r#type: crate::models::CounterpartyType,
    /// The website associated with the counterparty.
    #[serde(rename = "website", deserialize_with = "Option::deserialize")]
    pub website: Option<String>,
    /// The URL of a logo associated with the counterparty, if available. The logo is formatted as a 100x100 pixel PNG filepath.
    #[serde(rename = "logo_url", deserialize_with = "Option::deserialize")]
    pub logo_url: Option<String>,
}

impl TransactionCounterparty {
    /// The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description.
    pub fn new(
        name: String,
        r#type: crate::models::CounterpartyType,
        website: Option<String>,
        logo_url: Option<String>,
    ) -> TransactionCounterparty {
        TransactionCounterparty {
            name,
            r#type,
            website,
            logo_url,
        }
    }
}
