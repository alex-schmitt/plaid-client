/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.343.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// TransferAuthorizationDecisionRationaleCode : A code representing the rationale for approving or declining the proposed transfer. Possible values are:  `MANUALLY_VERIFIED_ITEM` – Item created via same-day micro deposits, limited information available. Plaid will offer `approved` as a transaction decision.  `ITEM_LOGIN_REQUIRED` – Unable to collect the account information due to Item staleness. Can be rectified using Link in update mode. Plaid will offer `approved` as a transaction decision.  `PAYMENT_PROFILE_LOGIN_REQUIRED` - Unable to collect the account information due to invalid login when using Payment Profiles. Can be rectified using update mode for Payment Profile. Plaid will offer `approved` as a transaction decision.  `ERROR` – Unable to collect the account information due to an error. Plaid will offer `approved` as a transaction decision.  `NSF` – Transaction likely to result in a return due to insufficient funds. Plaid will offer `declined` as a transaction decision.  `RISK` - Transaction is high-risk. Plaid will offer `declined` as a transaction decision.  `TRANSFER_LIMIT_REACHED` - One or several transfer limits are reached, e.g. monthly transfer limit. Plaid will offer `declined` as a transaction decision.  `MIGRATED_ACCOUNT_ITEM` - Item created via `/transfer/account_migration` endpoint, limited information available. Plaid will offer `approved` as a transaction decision.

/// A code representing the rationale for approving or declining the proposed transfer. Possible values are:  `MANUALLY_VERIFIED_ITEM` – Item created via same-day micro deposits, limited information available. Plaid will offer `approved` as a transaction decision.  `ITEM_LOGIN_REQUIRED` – Unable to collect the account information due to Item staleness. Can be rectified using Link in update mode. Plaid will offer `approved` as a transaction decision.  `PAYMENT_PROFILE_LOGIN_REQUIRED` - Unable to collect the account information due to invalid login when using Payment Profiles. Can be rectified using update mode for Payment Profile. Plaid will offer `approved` as a transaction decision.  `ERROR` – Unable to collect the account information due to an error. Plaid will offer `approved` as a transaction decision.  `NSF` – Transaction likely to result in a return due to insufficient funds. Plaid will offer `declined` as a transaction decision.  `RISK` - Transaction is high-risk. Plaid will offer `declined` as a transaction decision.  `TRANSFER_LIMIT_REACHED` - One or several transfer limits are reached, e.g. monthly transfer limit. Plaid will offer `declined` as a transaction decision.  `MIGRATED_ACCOUNT_ITEM` - Item created via `/transfer/account_migration` endpoint, limited information available. Plaid will offer `approved` as a transaction decision.
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
    bincode::Encode,
    bincode::Decode,
)]
pub enum TransferAuthorizationDecisionRationaleCode {
    #[serde(rename = "NSF")]
    Nsf,
    #[serde(rename = "RISK")]
    Risk,
    #[serde(rename = "TRANSFER_LIMIT_REACHED")]
    TransferLimitReached,
    #[serde(rename = "MANUALLY_VERIFIED_ITEM")]
    ManuallyVerifiedItem,
    #[serde(rename = "ITEM_LOGIN_REQUIRED")]
    ItemLoginRequired,
    #[serde(rename = "PAYMENT_PROFILE_LOGIN_REQUIRED")]
    PaymentProfileLoginRequired,
    #[serde(rename = "ERROR")]
    Error,
    #[serde(rename = "MIGRATED_ACCOUNT_ITEM")]
    MigratedAccountItem,
}

impl ToString for TransferAuthorizationDecisionRationaleCode {
    fn to_string(&self) -> String {
        match self {
            Self::Nsf => String::from("NSF"),
            Self::Risk => String::from("RISK"),
            Self::TransferLimitReached => String::from("TRANSFER_LIMIT_REACHED"),
            Self::ManuallyVerifiedItem => String::from("MANUALLY_VERIFIED_ITEM"),
            Self::ItemLoginRequired => String::from("ITEM_LOGIN_REQUIRED"),
            Self::PaymentProfileLoginRequired => String::from("PAYMENT_PROFILE_LOGIN_REQUIRED"),
            Self::Error => String::from("ERROR"),
            Self::MigratedAccountItem => String::from("MIGRATED_ACCOUNT_ITEM"),
        }
    }
}

impl Default for TransferAuthorizationDecisionRationaleCode {
    fn default() -> TransferAuthorizationDecisionRationaleCode {
        Self::Nsf
    }
}
